{
    "Реактивность": "Способность системы быстро реагировать на изменения внешних условий или внутренних состояний.",
    "Фреймворк": "Программная платформа, определяющая структуру программной системы; программное обеспечение, облегчающее разработку и объединение разных компонентов большого программного проекта.",
    "Virtual DOM": "Виртуальное представление документа в памяти, используемое веб-фреймворками для оптимизации обновления пользовательского интерфейса.",
    "UI": "Интерфейс пользователя, включая элементы управления, макет и визуальные элементы, предоставляемые приложением для взаимодействия с пользователем.",
    "фрп": "Функциональное реактивное программирование - парадигма программирования, использующая функциональные конструкции для работы с временно-зависимыми значениями.",
    "ООРП": "Объектно-ориентированное реактивное программирование - подход, комбинирующий принципы объектно-ориентированного и реактивного программирования.",
    "Javascript": "Язык программирования, широко используемый для создания динамических веб-страниц.",
    "React": "Библиотека JavaScript для разработки пользовательских интерфейсов, использующая подход на основе компонентов.",
    "Vue": "Прогрессивный фреймворк для создания пользовательских интерфейсов с поддержкой реактивности и компонентной архитектурой.",
    "мемоизация": "Техника оптимизации, при которой результат выполнения функции кэшируется для предотвращения повторных вычислений при одинаковых входных данных.",
    "Иммутабельность": "Свойство данных, которые не могут быть изменены после своего создания; изменение данных создает новый объект.",
    "State Management": "Управление состоянием приложения, включая хранение, изменение и передачу данных между компонентами.",
    "Flux": "Архитектурный паттерн и набор инструментов для управления состоянием веб-приложений.",
    "Виртуализация": "Создание виртуальной версии ресурсов, таких как вычислительная мощность или сетевые ресурсы, для более эффективного использования.",
    "веб-воркеры": "Сценарии веб-воркера выполняются в фоновом потоке, позволяя выполнять многозадачные операции без блокировки основного потока веб-приложения.",
    "Гидратация": "Процесс восстановления состояния клиентской части веб-приложения с использованием данных, полученных с сервера.",
    "Кэширование": "Механизм хранения копий данных в целях ускорения последующего доступа к этим данным.",
    "Observer": "Паттерн проектирования, который предоставляет механизм уведомления объектов об изменении состояния других объектов.",
    "MVC": "Архитектурный паттерн, разделяющий приложение на три компонента: Model (модель данных), View (представление) и Controller (управление)."
  }